name: CMake

on:
  push:
    branches: [ master ]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

env:
  BUILD_TYPE: MinSizeRel

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
        - os: windows-latest
        - os: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cmake -B build -A Win32
        else
          cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        fi

    - name: Build
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt update
          sudo apt install --yes g++-multilib nasm
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install nasm
        fi
        cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v2
      with:
        name: artifact-${{matrix.os}}
        path: |
          ${{github.workspace}}/build/ray
          ${{github.workspace}}/build/ray.compact
          ${{github.workspace}}/build/ray.map
          ${{github.workspace}}/build/ray-single
          ${{github.workspace}}/build/ray-single.compact
          ${{github.workspace}}/build/ray-single.map
          ${{github.workspace}}/build/MinSizeRel/ray.exe
          ${{github.workspace}}/build/ray.html
          ${{github.workspace}}/build/MinSizeRel/ray-single.exe
          ${{github.workspace}}/build/ray-single.html

  measure:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2 # we need scripts to do the measurement

    - uses: actions/download-artifact@v2

    - name: Measure
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install --yes valgrind:i386
        ./benchmark.sh > output.txt

    # gh-pages branch is updated and pushed automatically with extracted benchmark data
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: Benchmark
        tool: 'customSmallerIsBetter'
        output-file-path: output.txt
        # Access token to deploy GitHub Pages branch
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Push and deploy GitHub pages branch automatically
        auto-push: true
