name: CMake

on:
  push:
    branches: [ master ]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

env:
  CMAKE_BUILD_TYPE: MinSizeRel

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - asset_name: ray-macos-amd64
          os: macos-latest
          artifact_name: build/ray.compact
        - asset_name: ray-windows-x86.exe
          os: windows-latest
          artifact_name: build/MinSizeRel/ray.exe
          platform: Win32
          generator: "Visual Studio 17 2022"
        - asset_name: ray-linux-x86
          os: ubuntu-latest
          artifact_name: build/ray.compact

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      env:
        CMAKE_GENERATOR: ${{ matrix.generator }}
        CMAKE_GENERATOR_PLATFORM: ${{ matrix.platform }}
      run: cmake -B build

    - name: Build
      shell: bash
      run: |
        echo "github.ref = '${{ github.ref }}'"
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt update
          sudo apt install --yes g++-multilib nasm
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install nasm zopfli
        fi
        cmake --build build --config ${{env.CMAKE_BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.CMAKE_BUILD_TYPE}}

    - uses: actions/upload-artifact@v2
      with:
        name: artifact-${{matrix.os}}
        path: |
          ${{github.workspace}}/build/ray
          ${{github.workspace}}/build/ray.compact
          ${{github.workspace}}/build/ray.map
          ${{github.workspace}}/build/ray-single
          ${{github.workspace}}/build/ray-single.compact
          ${{github.workspace}}/build/ray-single.map
          ${{github.workspace}}/build/MinSizeRel/ray.exe
          ${{github.workspace}}/build/ray.html
          ${{github.workspace}}/build/MinSizeRel/ray-single.exe
          ${{github.workspace}}/build/ray-single.html

    - name: Release
      uses: svenstaro/upload-release-action@v2
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}

  measure:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2 # we need scripts to do the measurement

    - uses: actions/download-artifact@v2

    - name: Measure
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install --yes valgrind:i386
        ./benchmark.sh > output.txt

    # gh-pages branch is updated and pushed automatically with extracted benchmark data
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: Benchmark
        tool: 'customSmallerIsBetter'
        output-file-path: output.txt
        # Access token to deploy GitHub Pages branch
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Push and deploy GitHub pages branch automatically
        auto-push: true
